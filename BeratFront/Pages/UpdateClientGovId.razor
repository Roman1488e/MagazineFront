@page "/clients/update-govid/{clientId:guid}"
@using System.ComponentModel.DataAnnotations
@inject HttpClient Http
@inject NavigationManager Navigation

<h3 style="text-align:center; margin-top: 20px;">ðŸ†” Update Government ID</h3>

@if (updateModel == null)
{
    <p style="text-align:center;">Loading...</p>
}
else
{
    <EditForm Model="updateModel" OnValidSubmit="HandleValidSubmit">
        <DataAnnotationsValidator />
        <ValidationSummary />

        <div class="form-group">
            <label>Government ID:</label>
            <InputText class="form-control" @bind-Value="updateModel.GovId" />
        </div>

        <button type="submit" class="btn btn-success">Update</button>
    </EditForm>
}

<style>
    #blazor-error-ui {
        display: none;
    }

    .form-group {
        margin-bottom: 15px;
        width: 300px;
        margin: auto;
    }

    .form-control {
        width: 100%;
        padding: 8px;
        font-size: 16px;
    }

    .btn {
        display: block;
        margin: 20px auto;
    }
</style>

@code {
    [Parameter] public Guid clientId { get; set; }

    private UpdateClientsGovId? updateModel;

    protected override async Task OnInitializedAsync()
    {
        var client = await Http.GetFromJsonAsync<ClientGovIdDto>($"/api/clients/{clientId}");
        if (client is not null)
        {
            updateModel = new UpdateClientsGovId
            {
                GovId = client.GovernmentId
            };
        }
    }

    private async Task HandleValidSubmit()
    {
        var response = await Http.PutAsJsonAsync($"/api/clients/update/{clientId}/governmentId", updateModel);
        if (response.IsSuccessStatusCode)
        {
            Navigation.NavigateTo($"/clients/detail/{clientId}");
        }
        else
        {
            Console.WriteLine("Update failed");
        }
    }

    public class UpdateClientsGovId
    {
        [Required(ErrorMessage = "Government ID is required")]
        [RegularExpression(@"^\d{12}$", ErrorMessage = "Government ID must be exactly 12 digits")]
        public string GovId { get; set; }
    }

    public class ClientGovIdDto
    {
        public string GovernmentId { get; set; }
    }
}