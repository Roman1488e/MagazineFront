@page "/findclient"
@inject HttpClient Http
@inject NavigationManager Navigation

<h3 style="text-align:center; margin-top: 20px;">Müşteri ara</h3>

<style>
    #blazor-error-ui {
        display: none;
    }

    .search-container {
        max-width: 600px;
        margin: 30px auto;
        padding: 20px;
        background-color: #f5f5f5;
        border-radius: 10px;
        box-shadow: 0 2px 6px rgba(0, 0, 0, 0.1);
        font-family: sans-serif;
    }

    .search-container input, .search-container select {
        width: 100%;
        padding: 12px;
        font-size: 16px;
        margin-bottom: 10px;
        border: 1px solid #ccc;
        border-radius: 6px;
    }

    .search-container button {
        width: 100%;
        padding: 12px;
        background-color: #0078d4;
        color: white;
        font-size: 16px;
        border: none;
        border-radius: 6px;
        cursor: pointer;
    }

    .search-container button:hover {
        background-color: #005fa3;
    }

    .hint {
        font-size: 14px;
        color: #555;
        margin-bottom: 20px;
    }

    table {
        width: 90%;
        margin: 20px auto;
        border-collapse: collapse;
    }

    table, th, td {
        border: 1px solid #ccc;
    }

    th, td {
        padding: 10px;
        text-align: left;
    }

    th {
        background-color: #0078d4;
        color: white;
    }

    .add-order-button {
        background-color: #28a745;
        color: white;
        padding: 6px 10px;
        border: none;
        border-radius: 5px;
        cursor: pointer;
    }

    .add-order-button:hover {
        background-color: #1e7e34;
    }
</style>

<div class="search-container">
    <InputText @bind-Value="searchTerm" placeholder="Müşteri bilgisi giriniz" />
    <select @bind="isDesc">
        <option value="true">Yakın zamanda eklenenle</option>
        <option value="false">Önceden eklenenler</option>
    </select>
    <button @onclick="SearchClients">Ara</button>
</div>

@if (clients is not null && clients.Any())
{
<table>
    <thead>
    <tr>
        <th>Ad</th>
        <th>Soyad</th>
        <th>Telefon numarası</th>
        <th>TC kimlik numarası</th>
        <th>Adres</th>
        <th>Eylem</th>
    </tr>
    </thead>
    <tbody>
    @foreach (var client in clients)
    {
    <tr>
        <td>@client.Name</td>
        <td>@client.Surname</td>
        <td>@client.ContactNamber</td>
        <td>@client.GovernmentId</td>
        <td>@client.Address</td>
        <td>
            <button class="add-order-button" @onclick="() => NavigateToCreateOrder(client.Id)">
                Sipariş ekle
            </button>
        </td>
    </tr>
    }
    </tbody>
</table>
}
else if (clients is not null)
{
<p style="text-align:center; margin-top: 20px;">No results found.</p>
}

@code {
    private string searchTerm = string.Empty;
    private bool isDesc = true;
    private List<ClientModel>? allClients;
    private List<ClientModel>? clients;

    protected override async Task OnInitializedAsync()
    {
        allClients = await Http.GetFromJsonAsync<List<ClientModel>>($"/api/clients");
        clients = new List<ClientModel>(allClients);
    }

    private async Task SearchClients()
    {
        if (string.IsNullOrWhiteSpace(searchTerm))
        {
            // Если строка поиска пустая — показываем всех
            clients = new List<ClientModel>(allClients ?? new());
            return;
        }

        clients = await Http.GetFromJsonAsync<List<ClientModel>>($"/api/clients/search/{searchTerm}/{isDesc}");
    }

    private void NavigateToCreateOrder(Guid clientId)
    {
        Navigation.NavigateTo($"/createorder/{clientId}");
    }

    public class ClientModel
    {
        public Guid Id { get; set; }
        public string Name { get; set; }
        public string? Surname { get; set; }
        public string? ContactNamber { get; set; }
        public string GovernmentId { get; set; }
        public string Address { get; set; }
    }
}

