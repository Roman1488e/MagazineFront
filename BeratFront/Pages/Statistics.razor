@page "/statistics"
@inject HttpClient Http

<h3 style="text-align:center; margin-top: 20px;">ðŸ“Š Payment Statistics</h3>

@if (paymentStatistic == null || generalStatistic == null || debtStatistic == null)
{
    <p style="text-align:center;">Loading...</p>
}
else
{
    <div style="display: flex; flex-wrap: wrap; justify-content: center; gap: 30px; margin-top: 40px;">

        <div class="card">
            <h4>ðŸ’° Earned Today</h4>
            <p>@paymentStatistic.EarnedToday.ToString("C")</p>
        </div>

        <div class="card">
            <h4>ðŸ“… Earned This Month</h4>
            <p>@paymentStatistic.EarnedinMounth.ToString("C")</p>
        </div>

        <div class="card">
            <h4>ðŸ“ˆ Total Earnings</h4>
            <p>@paymentStatistic.EarnedForAllTime.ToString("C")</p>
        </div>

        <div class="card">
            <h4>ðŸ§¾ Total Debts</h4>
            <p>@generalStatistic.TotalDebts</p>
        </div>

        <div class="card">
            <h4>ðŸ“¦ Total Orders</h4>
            <p>@generalStatistic.TotalOrders</p>
        </div>

        <div class="card">
            <h4>âœ… Paid Orders</h4>
            <p>@generalStatistic.PaidOrders</p>
        </div>

        <div class="card">
            <h4>ðŸ‘¥ Total Clients</h4>
            <p>@generalStatistic.TotalClients</p>
        </div>

        <div class="card">
            <h4>ðŸ’¸ Total Debt Amount</h4>
            <p>@debtStatistic.TotalDebtAmount.ToString("C")</p>
        </div>

        <div class="card">
            <h4>âœ… Paid Debt Amount</h4>
            <p>@debtStatistic.PaidDebtAmount.ToString("C")</p>
        </div>

        <div class="card">
            <h4>ðŸ•’ Last Payment</h4>
            <p>@debtStatistic.LastDebtPaymentDate.ToShortDateString()</p>
        </div>
    </div>
}

<style>
    .card {
        padding: 20px;
        border: 1px solid #ccc;
        border-radius: 10px;
        background-color: #f9f9f9;
        text-align: center;
        min-width: 200px;
        width: 220px;
        box-shadow: 0 2px 5px rgba(0,0,0,0.1);
    }

    .card h4 {
        margin-bottom: 10px;
        color: #0078d4;
    }

    .card p {
        font-size: 22px;
        font-weight: bold;
    }

    @@media (max-width: 600px) {
        .card {
            width: 100%;
        }
    }
</style>

@code {
    private PaymentStatisticDto? paymentStatistic;
    private GeneralStatisticDto? generalStatistic;
    private DebtStatisticDto? debtStatistic;

    protected override async Task OnInitializedAsync()
    {
        paymentStatistic = await Http.GetFromJsonAsync<PaymentStatisticDto>("/api/paymenthistory/statistic");
        generalStatistic = await Http.GetFromJsonAsync<GeneralStatisticDto>("/api/order/statistics");
        debtStatistic = await Http.GetFromJsonAsync<DebtStatisticDto>("/api/debt/statistics");
    }

    public class PaymentStatisticDto
    {
        public decimal EarnedinMounth { get; set; }
        public decimal EarnedToday { get; set; }
        public decimal EarnedForAllTime { get; set; }
    }

    public class GeneralStatisticDto
    {
        public int TotalDebts { get; set; }
        public int TotalOrders { get; set; }
        public int PaidOrders { get; set; }
        public int TotalClients { get; set; }
    }

    public class DebtStatisticDto
    {
        public decimal TotalDebtAmount { get; set; }
        public decimal PaidDebtAmount { get; set; }
        public DateTime LastDebtPaymentDate { get; set; }
    }
}
